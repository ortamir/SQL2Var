(Papers 2 BOUNDED 3 3) (Authors 2) (Conflicts 2) (ReviewerBids 2)  (Reviewers 2 BOUNDED 2)  (ReviewerAssignments  2) (G 1)
requires
forall x y (ReviewerBids(x,y) -> ~ Conflicts(x,y)) &&
forall x y (ReviewerAssignments(x,y) -> ~ Conflicts(x,y)) &&
forall x (G(x) <-> exists y z w (Papers(x,y,z,w) & ~ Conflicts(currentUser, x)))

/* G = get-papers(currentUser) := {x | exists y z w (Papers(x,y,z,w) & ~ Conflicts(currentUser, x)} */

if (IsNotEmpty(SELECT G.Column1 FROM G WHERE Column1 = bidId))
  INSERT INTO ReviewerBids VALUES (currentUser, bidId);
else
  skip ;
;
ensures
forall x y (ReviewerBids(x,y) -> ~ Conflicts(x,y)) &&
forall x y (ReviewerAssignments(x,y) -> ~ Conflicts(x,y))


