(declare-sort V 0)
(declare-fun Subscriptions (V V) Bool)
(declare-fun Users (V) Bool)
(declare-const eventNewsletter2 V)
(declare-const eventUser2 V)
(declare-const eventUser V)
(declare-const eventNewsletter V)
(assert 
	(not 
		(=> 
			(and 
				(and 
					(and 
						(forall ((x V)) (=> (Users x) (exists ((y V)) (Subscriptions y x)))) 
						(forall ((x V)(y V)) (=> (Subscriptions y x) (Users x)))
					) 
					(exists ((x V)) (forall ((y V)) (=> (Users y) (Subscriptions x y))))
				) 
				(and 
					(and 
						(forall ((x V)) (=> (Users x) (exists ((y V)) (Subscriptions y x)))) 
						(forall ((x V)(y V)) (=> (Subscriptions y x) (Users x)))
					) 
					(exists ((x V)) (forall ((y V)) (=> (Users y) (Subscriptions x y))))
				)
			) 
			(exists ((x V)) 
				(forall ((y V)) 
					(=> (Users y) 
						(and 
							(and 
								(Subscriptions x y) 
								(not (and (= x eventNewsletter) (= y eventUser))
								)) 
							(not (and (= x eventNewsletter2) (= y eventUser2)))
						)
					)
				)
			)
		)
	) 
)
(check-sat)
(get-model)